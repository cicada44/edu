Необходимо инициализировать переменные в конструкторе последовательно.
Также, не стоит инициализировать одну переменную другой.
Констуктор, выстраивающий аргументы по умолчанию - тоже стандартный конструктор.

    7.5.2 Делигирующий конструктор
Делигирующий конструктор работает за счет другого конструктора.

    7.5.3 Роль стандартного конструктора
Почти всегда имеет смысл предоставлять стандартный констуктор, если используются прочие.

    7.5.4 Неявное преобразование типов класса
Каждый конструктор, который вызван с одним аргументом неявно преобразует его в тип класса.
Такие конструкторы называются констукторами преобразования.
Допустимо только одно преобразование при использовании конструктора.

explicit Sales_data(std::string &s) ... // отменяет возможность неявного преобразования

Также, преобразование не работает с инициализацией копированием.

    7.5.5 Агрегатные классы
Все члены класса являются открытыми. Нет конструкторов и внутриклассовых инициализаторов.